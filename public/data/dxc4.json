{
  "name": "dxc4 chess API",
  "protocol": "rest",
  "basePath": "http://api.dxc4.com",
  "publicPath": "",
  "privatePath": "",
  "headers": {
    "Content-Type": "application/json"
  },
  "resources": {
    "Info methods": {
      "methods": {
        "About": {
          "name": "About",
          "path": "/",
          "httpMethod": "GET",
          "description": "Returns information about the dxc4 API. Does not require any parameters or authentification.",
          "parameters": {
          }
        }
      }
    },
    "Chess methods": {
      "methods": {
        "Game": {
          "name": "Game",
          "path": "/game",
          "httpMethod": "POST",
          "description": "Returns several aspects of a chess game based on a set of algebraic moves provided as an array or in PGN notation.",
          "parameters": {
            "pgn": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "1. d4 d5 2. c4",
              "description": "A PGN compatible moves string starting form the default board position. Numbering the moves is optional. Any underscores are treated as spaces. Alternatively you can also pass in a moves array (see history array parameter)"
            },
            "movecount": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "-1",
              "description": "The game's state will be set to this specific half move if set. Negative numbers will be offset from the last half move."
            },
            "includes": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "fen previousMoves availableMoves board",
              "description": " What should be included in the response? Available values: status, side, pgn, fen, previousMoves, availableMoves, board, previousFullMoves, attacks. (Defaults to: status pgn side previousMoves)"
            },
            "history": {
              "title":"history",
              "type": "array",
              "items": {
                "title":"move",
                "required": false,
                "default": "",
                "type":"string",
                "description":"An single legal half move in algebraic notation."
              }
            }
          }
        },
        "Move": {
          "name": "Move",
          "path": "/move",
          "httpMethod": "POST",
          "description": "Applies a new move to a game. Returns a board object, move history, game status, available moves, and fen position.",
          "parameters": {
            "move": {
              "type": "string",
              "location": "body",
              "required": true,
              "default": "dxc4",
              "description":"An single legal half move in algebraic notation."
            },
            "pgn": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "1. d4 d5 2. c4",
              "description": "A PGN compatible moves string starting form the default board position. Numbering the moves is optional. Any underscores are treated as spaces. Alternatively you can also pass in a moves array (see history array parameter)"
            },
            "includes": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "side previousMoves",
              "description": " What should be included in the response? Available values: status, side, pgn, fen, previousMoves, availableMoves, board, previousFullMoves, attacks. (Defaults to: status pgn side previousMoves)"
            },
            "history": {
              "title":"history",
              "type": "array",
              "items": {
                "title":"move",
                "required": false,
                "default": "",
                "type":"string",
                "description":"Individual legal move in algebraic notation."
              }
            }
          }
        },
        "bestmove": {
          "name": "EXPERIMENTAL: Best move",
          "path": "/bestmove",
          "httpMethod": "POST",
          "description": "Makes the best move as determined by the stockfish engine in a game. Returns a board object, move history, game status, available moves, and fen position.",
          "parameters": {
            "pgn": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "1. d4 d5 2. c4",
              "description": "A PGN compatible moves string starting form the default board position. Numbering the moves is optional. Any underscores are treated as spaces. Alternatively you can also pass in a moves array (see history array parameter)"
            },
            "includes": {
              "type": "string",
              "location": "body",
              "required": false,
              "default": "pgn",
              "description": " What should be included in the response? Available values: status, side, pgn, fen, previousMoves, availableMoves, board, previousFullMoves, attacks. (Defaults to: status pgn side previousMoves)"
            },
            "history": {
              "title":"history",
              "type": "array",
              "items": {
                "title":"move",
                "required": false,
                "default": "",
                "type":"string",
                "description":"Individual legal move in algebraic notation."
              }
            }
          }
        }
      }
    }
  }
}
