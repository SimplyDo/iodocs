{
  "name": "dxc4 chess API",
  "protocol": "rest",
  "basePath": "http://api.dxc4.com",
  "publicPath": "",
  "privatePath": "",
  "headers": {
    "Content-Type": "application/json"
  },
  "resources": {
    "Methods": {
      "methods": {
        "About": {
          "name": "About",
          "path": "/",
          "httpMethod": "GET",
          "description": "Returns information about the dxc4 Chess API. Does not require any parameters.",
          "parameters": {
          }
        },
        "Game": {
          "name": "PGN Parser",
          "path": "/pgnparser",
          "httpMethod": "POST",
          "description": "Parses a PGN compatible moves string to calculate and return various details of a game. While being state less (you need to POST a set of moves for each request) this can be used to move through a game's history, apply new moves, and even invoke a chess engine to play. Among other things you can request a FEN string, a board object, the current player's available moves, the game's status and much more. See dxc4.com for an example application that utilizes many of these features.",
          "parameters": {
            "pgn": {
              "type": "textarea",
              "location": "body",
              "required": false,
              "default": "1. d4 d5 2. c4",
              "description": "A PGN compatible moves string starting from the initial board position. Numbering the moves is optional. Any underscores are treated as spaces."
            },
            "includes": {
              "type": "string",
              "location": "query",
              "required": true,
              "enum": ["status", "side", "pgn", "fen", "previousMoves", "valuation", "availableFullMoves", "availableMoves", "board", "previousFullMoves", "attacks"],
              "description": "What kind of information about the game should be returned. You can also request multiple or even all items by passing in a comma seperated string. (Defaults to: status,pgn)"
            },
            "moveCount": {
              "type": "string",
              "location": "query",
              "required": false,
              "default": "",
              "description": "Optinally sets the game's state to an earlier move and discards any subsequent moves. Negative numbers will be offset from the last half move."
            },
            "nextMove": {
              "type": "string",
              "location": "query",
              "required": false,
              "default": "",
              "description": "You can pass in a single move in algebraic notation to be applied to the game."
            },
            "stockfish": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "required": false,
              "description": "Experimental: If set to true the best next move will be determined by the stockfish chess engine and applied to the game."
            }
          }
        }
      }
    }
  }
}
